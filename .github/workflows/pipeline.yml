name: Deployment Pipeline

on:
  push:
    branches:
      - master

  pull_request:
    branches: [master]
    types: [opened, synchronize]
jobs:
  deployment_pipeline:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-20.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install
      
      - name: Run Eslint
        run: npm run eslint

      - name: Build
        run: npm run build
      
      - name: Test
        run: npm test

      - name: Run e2e tests
        uses: cypress-io/github-action@v5
        with:
          command: npm run test:e2e
          start: npm start
          wait-on: 'http://localhost:8080'

  # tag_release:
  #   needs: [deployment_pipeline]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Bump version and push tag
  #       uses: anothrNick/github-tag-action@1.64.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # notify_discord:
  #   needs: [deployment_pipeline]
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Notify Discord on success
  #       if: success()
  #       uses:  rjstone/discord-webhook-notify@v1
  #       with:
  #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  #         details: "New version deployed successfully!"
  #         serverity: info

  #     - name: Notify Discord on failure
  #       if: failure()
  #       uses:  rjstone/discord-webhook-notify@v1
  #       with:
  #         webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
  #         serverity: error
  #         details: |
  #           Build failed!
  #           Please check the workflow run to find the cause.
  
  # health_check:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check the deployed service URL
  #     uses: jtalk/url-health-check-action@v4
  #     with:
  #       # Check the following URLs one by one sequentially
  #       url: https://example.com|http://example.com
  #       # Follow redirects, or just report success on 3xx status codes
  #       follow-redirect: false # Optional, defaults to "false"
  #       # Fail this action after this many failed attempts
  #       max-attempts: 3 # Optional, defaults to 1
  #       # Delay between retries
  #       retry-delay: 5s # Optional, only applicable to max-attempts > 1
  #       # Retry all errors, including 404. This option might trigger curl upgrade.
  #       retry-all: false # Optional, defaults to "false"
  #       # String representation of cookie attached to health check request.
  #       # Format: `Name=Value`
  #       cookie: "token=asdf1234" # Optional, default is empty
  #       # Basic auth login password pair.
  #       # Format: `login:password`
  #       basic-auth: "login:password" # Optional, default is empty